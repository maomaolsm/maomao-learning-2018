<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.maomao</groupId>
    <artifactId>spring-webmvc-autoconfig</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>

        <!-- servlet 3.0 api 必须要引入 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>5.2.20.RELEASE</version>
        </dependency>
    </dependencies>

    <!-- 首先通过 maven 打个包即执行 package 命令 -->
    <!-- 然后在命令行运行 java -jar spring-webmvc-autoconfig\target\spring-webmvc-autoconfig-1.0-SNAPSHOT-war-exec.jar -->

    <!-- 然后访问 http://localhost:8080/foo -->
    <!-- 因为 <path>foo</path> 所以根目录映射在了 foo 上 -->

    <!-- 如何调试 -->
    <!-- idea 进入 run/debug configuration ，添加 remote -->
    <!-- 执行 java -jar -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 spring-webmvc-autoconfig\target\spring-webmvc-autoconfig-1.0-SNAPSHOT-war-exec.jar -->
    <!-- 参数 suspend 是不是阻塞，用 y -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.1</version>
                <executions>
                    <execution>
                        <id>tomcat-run</id>
                        <goals>
                            <goal>exec-war-only</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <!-- ServletContext path -->
                            <path>foo</path>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>